@model PLAYOUT.Models.ViewModels.CanalPrograma

<div class="video-player">
    <video id="videoPlayer" width="300" height="200" controls autoplay>
        <!-- Aquí se cargará dinámicamente el video en JavaScript -->
        <source id="videoSource" src="@Model.musicales.First().Direccion" type="video/mp4">
    </video>
</div>

@section Scripts {
    <script>
        var videoPlayer = document.getElementById("videoPlayer");
        var videoSource = document.getElementById("videoSource");

        // Convertir el modelo en una lista de URLs de videos en JavaScript
        var videos = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.musicales.ToList()));
        var currentIndex = 0;

        // Función para cargar y reproducir el siguiente video
        function playNextVideo() {
            currentIndex++;
            if (currentIndex >= videos.length) {
                currentIndex = 0; // Volver al primer video si se alcanzó el final de la lista
            }
            videoSource.src = videos[currentIndex];
            videoPlayer.load();
            videoPlayer.play();
        }

        // Evento para reproducir el siguiente video cuando termina el actual
        videoPlayer.addEventListener("ended", playNextVideo);

        // Guardar el índice del video actual y el tiempo de reproducción antes de cambiar de página
        window.addEventListener("beforeunload", function () {
            localStorage.setItem('currentVideoIndex', currentIndex);
            localStorage.setItem('videoTime', videoPlayer.currentTime);
        });

        // Restaurar la posición y el video actual cuando la página se recargue
        window.addEventListener("load", function () {
            var savedIndex = localStorage.getItem('currentVideoIndex');
            var savedTime = localStorage.getItem('videoTime');

            if (savedIndex !== null) {
                currentIndex = parseInt(savedIndex);
                videoSource.src = videos[currentIndex];
                videoPlayer.load();
                if (savedTime !== null) {
                    videoPlayer.currentTime = parseFloat(savedTime);
                }
                videoPlayer.play();
            }
        });
    </script>
}

<style>
    .video-player {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1000;
        background-color: #000;
        padding: 5px;
        border-radius: 5px;
    }
</style>
